[
    {
        "id": "SSD_SERVICE_ID_sd_swLoHJcJEoaYFd9j",
        "type": "tab",
        "createdDate": "2024-02-13T14:53:43.091Z",
        "label": "filter_specific_service",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "filter_specific_service",
        "relativeParentPath": "appointments/filter_specfic"
    },
    {
        "id": "sd_dGPuSolv6TkpIlRR",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_swLoHJcJEoaYFd9j",
        "viewType": "common",
        "nodeType": "flow",
        "name": "Status Report",
        "script": "bh.local.response={\n    statusCode:200,\n    data:bh.local.resultdata\n}",
        "functionName": "statusReport",
        "category": "Function",
        "x": 565,
        "y": 80,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "filter_specific_service",
        "generated": true
    },
    {
        "id": "sd_M4kWd8w4TMElXLRB",
        "type": "ExecuteSql",
        "z": "SSD_SERVICE_ID_sd_swLoHJcJEoaYFd9j",
        "viewType": "server",
        "nodeType": "flow",
        "name": "get_a_user_sql",
        "databaseConfig": "sd_JFEzq9BaWr7Csm3t",
        "queryType": "",
        "resultMap": {
            "type": "bh.local",
            "value": "resultdata"
        },
        "multipleQuery": "",
        "singleQuery": {
            "type": "bh.local",
            "value": "query"
        },
        "inputs": 1,
        "outputs": 1,
        "params": [],
        "paramMappingObj": {
            "type": "bh.local",
            "value": "queryvalues"
        },
        "dbType": "postgres",
        "functionName": "getAUserSql",
        "category": "Storage",
        "x": 405,
        "y": 80,
        "wires": [
            [
                "sd_dGPuSolv6TkpIlRR"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "filter_specific_service",
        "generated": true
    },
    {
        "id": "sd_qe1kVCwb5gWcYnUH",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_swLoHJcJEoaYFd9j",
        "viewType": "common",
        "nodeType": "flow",
        "name": "psql_query",
        "script": "console.log(bh.input.filter)\nlet fields=bh.input.filter?.columns?.join(\",\") || `*`;\nlet sorttable=bh.input.filter?.sorttable;\nlet sorttype=bh.input.filter.sorttype || `ASC`;\nlet limitdata=bh.input.filter.limit;\nlet filter=bh.input.filter.datas;\n\nbh.local.query = `SELECT ${fields} FROM ${process.env.DB_SCHEMA}.appointments`\nbh.local.queryvalues=[]\nlet keys = Object.keys(filter);\nlet count=0;\nif(keys.length>0){\n    bh.local.query+=' where '\n    keys.forEach((key, index) => {\n        bh.local.query+=key+` IN (`;\n        filter[key].forEach((element, index)=>{\n            bh.local.query+= `$${count+1}`\n            bh.local.queryvalues.push(element)\n            if (filter[key].length > 1 && index < filter[key].length - 1) {\n                bh.local.query += \", \"\n            }\n            count ++;\n        })\n           bh.local.query+=`)`;  \n        if (keys.length > 1 && index < keys.length - 1) {\n            bh.local.query += \" AND \"\n        }\n})\n}\nif(sorttable){\n     bh.local.query += \" ORDER BY \"+ sorttable +\" \" + sorttype\n}\nif(limitdata){\n     bh.local.query += \" LIMIT \"+ limitdata +\" ;\"\n}",
        "functionName": "psqlQuery",
        "category": "Function",
        "x": 285,
        "y": 80,
        "wires": [
            [
                "sd_M4kWd8w4TMElXLRB"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "filter_specific_service",
        "generated": true
    },
    {
        "id": "sd_lCNeGGjlsbV1cOSW",
        "type": "Start",
        "z": "SSD_SERVICE_ID_sd_swLoHJcJEoaYFd9j",
        "viewType": "client-server",
        "nodeType": "start",
        "name": "filter_specific",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "filter",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [
            {
                "key": "response",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": true
            }
        ],
        "accept_bh": false,
        "functionName": "filterSpecific",
        "category": "General",
        "x": 145,
        "y": 80,
        "wires": [
            [
                "sd_qe1kVCwb5gWcYnUH"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "filter_specific_service"
    }
]
