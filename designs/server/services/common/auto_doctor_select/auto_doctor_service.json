[
    {
        "id": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "type": "tab",
        "createdDate": "2024-02-16T05:56:10.699Z",
        "label": "auto_doctor_service",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "auto_doctor_service",
        "relativeParentPath": "common/auto_doctor_select"
    },
    {
        "id": "sd_12ZhHVbRlSKOXiq9",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "payment_script",
        "script": "bh.input.doctor={\"id\":[bh.input?.data?.payment_id]};",
        "functionName": "paymentScript",
        "category": "Function",
        "x": 1585,
        "y": 100,
        "wires": [
            [
                "sd_gmBtiasHvoPzEfga"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "auto_doctor_service"
    },
    {
        "id": "sd_gmBtiasHvoPzEfga",
        "type": "CallService",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "payment_flow",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "SSD_SERVICE_ID_sd_FdlVrRt9r82JaAwS",
            "type": "tab",
            "createdDate": "2024-02-12T17:09:46.935Z",
            "label": "filter_doctor_service",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_8BHWhDa3GVzpn7tx",
            "flowName": "getADoctor"
        },
        "inputVariables": [
            {
                "key": "filter",
                "map": true,
                "valueType": "bh.input",
                "value": "doctor"
            }
        ],
        "bhVariables": [],
        "outputMapping": [
            {
                "mapVarType": "local",
                "key": "response",
                "valueType": "bh.local",
                "value": "doctor_response",
                "mapVarName": "response",
                "localVar": "bh.local.doctor_response"
            }
        ],
        "callService": "../../doctors/filter_doctor/filter_doctor_service",
        "startName": "getADoctor",
        "inputParams": [
            "bh.input.doctor"
        ],
        "accept_bh": false,
        "functionName": "paymentFlow",
        "category": "General",
        "x": 1685,
        "y": 100,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "auto_doctor_service"
    },
    {
        "id": "sd_f1gxTwkXDtPVOmf9",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "Status_error_report",
        "script": "bh.local.response={\n    statusCode:400,\n    error:bh.error.message\n}",
        "functionName": "statusErrorReport",
        "category": "Function",
        "x": 291,
        "y": 511.5999755859375,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_b1bSUCxIWAnBZSaE",
        "type": "Catch",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "start",
        "name": "error_handle",
        "selectedNodes": "all-nodes",
        "selectCatchType": "allnodes",
        "masternodeList": "",
        "ignoreList": [
            "sd_f1gxTwkXDtPVOmf9"
        ],
        "functionName": "errorHandle",
        "category": "General",
        "x": 131,
        "y": 511.5999755859375,
        "wires": [
            [
                "sd_f1gxTwkXDtPVOmf9"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "auto_doctor_service"
    },
    {
        "id": "sd_otLhY4aMkMQD0RvJ",
        "type": "Start",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "client-server",
        "nodeType": "start",
        "name": "auto_doctor_select",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "data",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [
            {
                "key": "response",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": true
            }
        ],
        "accept_bh": false,
        "functionName": "autoDoctorSelect",
        "category": "General",
        "x": 145,
        "y": 320,
        "wires": [
            [
                "sd_QecKCLxPLKHEipWF"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "auto_doctor_service"
    },
    {
        "id": "sd_bmZgo3ZmXEJsschR",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "doctor_error_response",
        "script": "bh.local.response = {\n  statusCode: 200,\n  data: {},\n  selcted:{}\n};",
        "functionName": "doctorErrorResponse",
        "category": "Function",
        "x": 605,
        "y": 200,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_QecKCLxPLKHEipWF",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "docto_script",
        "script": "bh.input.doctor={\"department_id\":[bh.input.data]};\nconsole.log(bh.input.doctor)",
        "functionName": "doctoScript",
        "category": "Function",
        "x": 265,
        "y": 320,
        "wires": [
            [
                "sd_d5UnEr9GfEY9f67J"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_d5UnEr9GfEY9f67J",
        "type": "CallService",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "doctor_flow",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "SSD_SERVICE_ID_sd_FdlVrRt9r82JaAwS",
            "type": "tab",
            "createdDate": "2024-02-12T17:09:46.935Z",
            "label": "filter_doctor_service",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_8BHWhDa3GVzpn7tx",
            "flowName": "getADoctor"
        },
        "inputVariables": [
            {
                "key": "filter",
                "map": true,
                "valueType": "bh.input",
                "value": "doctor"
            }
        ],
        "bhVariables": [],
        "outputMapping": [
            {
                "mapVarType": "local",
                "key": "response",
                "valueType": "bh.local",
                "value": "doctor_response",
                "mapVarName": "response",
                "localVar": "bh.local.doctor_response"
            }
        ],
        "callService": "../../doctors/filter_doctor/filter_doctor_service",
        "startName": "getADoctor",
        "inputParams": [
            "bh.input.doctor"
        ],
        "accept_bh": false,
        "functionName": "doctorFlow",
        "category": "General",
        "x": 385,
        "y": 320,
        "wires": [
            [
                "sd_DhVyCYWHgkPpCUYX"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_3IpfcYH11kNvA2La",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "time_finder_filter",
        "script": "\nconst currentDate = new Date();\nconst year = currentDate.getFullYear();\nconst month = currentDate.getMonth() + 1; // Month is zero-based, so add 1\nconst day = currentDate.getDate();\nbh.input.formattedDate = `${year}-${month < 10 ? \"0\" + month : month}-${\n  day < 10 ? \"0\" + day : day\n}`;\nconsole.log(bh.local?.doctor_response)\nlet idArray = bh.local?.doctor_response?.map(doc => doc.id);\nconsole.log(idArray);\nbh.input.appoinmentfilter={\n    \"columns\":[\"doctor_id\",\"MAX(token_number) as max_token\"],\n    \"datas\":{\n        \"appointment_date\":[\"2024-02-15\"],\n        \"doctor_id\": idArray\n    },\n    \"groupby\":[\"doctor_id\"]\n}\nconsole.log(bh.input.appoinmentfilter)",
        "functionName": "timeFinderFilter",
        "category": "Function",
        "x": 645,
        "y": 320,
        "wires": [
            [
                "sd_M9Hf5Mj34D1cAB3E"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_M9Hf5Mj34D1cAB3E",
        "type": "CallService",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "get_auto_data",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "SSD_SERVICE_ID_sd_swLoHJcJEoaYFd9j",
            "type": "tab",
            "createdDate": "2024-02-13T14:53:43.091Z",
            "label": "filter_specific_service",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_lCNeGGjlsbV1cOSW",
            "flowName": "filterSpecific"
        },
        "inputVariables": [
            {
                "key": "filter",
                "map": true,
                "valueType": "bh.input",
                "value": "appoinmentfilter"
            }
        ],
        "bhVariables": [],
        "outputMapping": [
            {
                "mapVarType": "local",
                "key": "response",
                "valueType": "bh.local",
                "value": "appointment_response",
                "mapVarName": "response",
                "localVar": "bh.local.appointment_response"
            }
        ],
        "callService": "../../appointments/filter_specfic/filter_specific_service",
        "startName": "filterSpecific",
        "inputParams": [
            "bh.input.appoinmentfilter"
        ],
        "accept_bh": false,
        "functionName": "getAutoData",
        "category": "General",
        "x": 745,
        "y": 320,
        "wires": [
            [
                "sd_GBFamdBUYVdVXsiA"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_GBFamdBUYVdVXsiA",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "appointment_error_handler",
        "script": "if(bh.local?.appointment_response?.statusCode==200){\n    bh.local.appointment_response=bh.local.appointment_response?.data\n}else{\n    throw new Error(\"Some error Occured try again later\")\n}\n",
        "functionName": "appointmentErrorHandler",
        "category": "Function",
        "x": 885,
        "y": 320,
        "wires": [
            [
                "sd_a1z6MZMvU9kRrMNR"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_a1z6MZMvU9kRrMNR",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "data_manage_and_output",
        "script": "let results = [];\nlet topBalanceToken = Number.MIN_SAFE_INTEGER;\nlet topDoctor = {};\nfor (let i = 0; i < bh.local.doctor_response.length; i++) {\n  let doctorItem = bh.local.doctor_response[i];\n  let appointmentItem = bh.local.appointment_response.find(\n    (app) => app.doctor_id === doctorItem.id\n  );\n  if (appointmentItem) {\n    let balanceToken = doctorItem.token_limit - appointmentItem.max_token;\n    results.push({\n      id: doctorItem.id,\n      balanceToken: balanceToken,\n      ...doctorItem,\n    });\n    if (balanceToken > topBalanceToken) {\n      topBalanceToken = balanceToken;\n      topDoctor = {\n        id: doctorItem.id,\n        balanceToken: balanceToken,\n        ...doctorItem,\n      };\n    }\n  }\n}\nbh.local.response = {\n  statusCode: 200,\n  data: results,\n  selcted:topDoctor\n};\nconsole.log(bh.local.response);\n",
        "functionName": "dataManageAndOutput",
        "category": "Function",
        "x": 1060,
        "y": 320,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_DhVyCYWHgkPpCUYX",
        "type": "Switch",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "doctor_response.data.length",
        "propertyType": "bh.local",
        "propertyGv": "bh.local.doctor_response.data.length",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num",
                "gv": "0"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "functionName": "sd_DhVyCYWHgkPpCUYX",
        "category": "Function",
        "x": 500,
        "y": 300,
        "wires": [
            [
                "sd_bmZgo3ZmXEJsschR"
            ],
            [
                "sd_ku4npc4boInEB59R"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    },
    {
        "id": "sd_ku4npc4boInEB59R",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_bthY8bjd638CxsCf",
        "viewType": "common",
        "nodeType": "flow",
        "name": "doctor_error_handler",
        "script": "if(bh.local.doctor_response.statusCode==200){\n    bh.local.doctor_response=bh.local.doctor_response?.data\n}else{\n    throw new Error(\"Some error Occured try again later\")\n}\n",
        "functionName": "doctorErrorHandler",
        "category": "Function",
        "x": 585,
        "y": 400,
        "wires": [
            [
                "sd_3IpfcYH11kNvA2La"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "auto_doctor_service",
        "generated": true
    }
]
